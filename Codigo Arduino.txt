// Pines para el control del motor

int IN1 = 9;
int IN2 = 8;
int IN3 = 7;
int IN4 = 6;

int ENA = 10;
int ENB = 5;


#define distanciaMaxima 60  // Distancia total que se desea recorrer (en cm)
#define distanciaAvance 5   // Distancia a avanzar cada vez (en cm)



// Definir pines de entrada y salida
const int trig = 12;
const int echo = 11;

// Variables para almacenar el tiempo de ida y vuelta del pulso
long duration;
int distancia1;



int sharpPin = A0;  // Pin analógico donde está conectado el sensor
float distancia2;   // Variable para almacenar la distancia medida

void setup() {
  Serial.begin(9600);  // Iniciar la comunicación serial
    // Configurar los pines de entrada y salida
  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);

  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
}

void loop() {

  // Establecer el pin trig en alto durante 10 microsegundos
  digitalWrite(trig, HIGH);
  delayMicroseconds(10);
  digitalWrite(trig, LOW);

  // Medir el tiempo de ida y vuelta del pulso
  duration = pulseIn(echo, HIGH);

  // Calcular la distancia en centímetros
  distancia1 = duration * 0.034 / 2;

  // Leer el valor del pin analógico y calcular la distancia en centímetros
  int val = analogRead(sharpPin);
  distancia2 = 27.86 / (val - 0.16) * 100;
 
    Serial.print(duration);
    Serial.print(",");
    Serial.print(distancia1);
    Serial.print(",");
    Serial.print(val);
    Serial.print(",");
    Serial.print(distancia2);
    Serial.println();
  
 delay(1000);


 if (distancia1<distanciaMaxima){
       analogWrite(ENA, 100);
       analogWrite(ENB, 100);
       digitalWrite(IN1, LOW);
       digitalWrite(IN2, HIGH);
       digitalWrite(IN3, HIGH);
       digitalWrite(IN4, LOW);
      
 if (distancia1 % distanciaAvance == 0) { //Si la distancia recorrida es un múltiplo de la distancia a avanzar
       analogWrite(ENA, 0);
       analogWrite(ENB, 0);
       digitalWrite(IN1, LOW);
       digitalWrite(IN2, LOW);
       digitalWrite(IN3, LOW);
       digitalWrite(IN4, LOW);
       delay(3000);
       analogWrite(ENA, 100);
       analogWrite(ENB, 100);
       digitalWrite(IN1, LOW);
       digitalWrite(IN2, HIGH);
       digitalWrite(IN3, HIGH);
       digitalWrite(IN4, LOW);
 }

 } else{
       analogWrite(ENA, 0);
       analogWrite(ENB, 0);
       digitalWrite(IN1, LOW);
       digitalWrite(IN2, LOW);
       digitalWrite(IN3, LOW);
       digitalWrite(IN4, LOW);
  
 }

}